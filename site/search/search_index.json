{"config":{"lang":["en","zh"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>This is the English home page.</p>"},{"location":"getting-started/","title":"Getting started","text":"<p>Install dependencies and run locally.</p>"},{"location":"learn-k8s-django/","title":"Case Study 1: Deploying a Django Web Page on a k8s Cluster","text":"<p>Prerequisites: 1. A kind-based k8s cluster has been set up on Ubuntu 20.04. 2. The kind cluster name is <code>my-k8s</code>.</p> <p>Note: All related files are stored under the <code>learn-k8s-django</code> directory.</p>"},{"location":"learn-k8s-django/#building-a-mysql-database-in-k8s","title":"Building a MySQL Database in k8s","text":"<ol> <li> <p>First, import the MySQL image.</p> </li> <li> <p>Write the YAML manifest:    See <code>sql-k8s.yaml</code>.</p> </li> <li> <p>Deploy to Kubernetes:</p> </li> </ol> <pre><code>kubectl apply -f sql-k8s.yaml\n</code></pre>"},{"location":"learn-k8s-django/#building-the-django-web-image","title":"Building the Django Web Image","text":"<ol> <li> <p>Create a new Django project.</p> </li> <li> <p>Modify the project settings in <code>settings.py</code> to use MySQL:</p> </li> </ol> <pre><code>DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        \"NAME\": \"mytest\",\n        \"USER\": \"root\",\n        \"PASSWORD\": os.environ.get(\"MYSQL_ROOT_PASSWORD\"),  # Get password from environment variable\n        \"HOST\": \"mysql.storage.svc.cluster.local\",          # DNS address of the MySQL Service\n        \"PORT\": \"3306\",                                     # Default MySQL port\n        \"OPTIONS\": {\n            \"charset\": \"utf8mb4\",                           # Use utf8mb4 to support emojis, etc.\n            \"init_command\": \"SET sql_mode='STRICT_TRANS_TABLES'\"\n        },\n    }\n}\n</code></pre> <ol> <li>Save the file, then create <code>requirements.txt</code> and <code>Dockerfile</code> in the project directory.</li> </ol> <p>requirements.txt</p> <pre><code>Django==5.0\nmysqlclient==2.2.4\ngunicorn==23.0.0\n</code></pre> <p>Dockerfile</p> <pre><code># Use the official Python image as the base\nFROM python:3.10-slim\n\n# Set working directory\nWORKDIR /app\n\n# Install dependencies required to build mysqlclient\nRUN apt-get update &amp;&amp; \\\n    apt-get install -y --no-install-recommends \\\n    build-essential \\\n    gcc \\\n    pkg-config \\\n    libmariadb-dev \\\n    libmariadb-dev-compat &amp;&amp; \\\n    rm -rf /var/lib/apt/lists/*  # Clean apt cache to reduce image size\n\n# Copy current directory into the container\nCOPY . /app/\n\n# Install project dependencies\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Run database migrations and start Django via Gunicorn\nCMD [\"sh\", \"-c\", \"python manage.py migrate &amp;&amp; gunicorn mysite.wsgi:application -b 0.0.0.0:8000\"]\n</code></pre> <ol> <li>Build the image:</li> </ol> <pre><code>sudo docker build -t my-2025-k8s-single-django-app .\n</code></pre> <ol> <li>Save the image:</li> </ol> <pre><code>sudo docker save -o my-2025-k8s-single-django-app.tar my-2025-k8s-single-django-app:latest\nsudo chmod 777 my-2025-k8s-single-django-app.tar\n</code></pre> <p>Note: The image produced in this step can be found under the <code>learn-k8s-django</code> directory.</p>"},{"location":"learn-k8s-django/#deploying-the-django-web-app-on-the-k8s-cluster","title":"Deploying the Django Web App on the k8s Cluster","text":"<ol> <li>Import the Django image into kind:</li> </ol> <pre><code>kind load image-archive my-2025-k8s-single-django-app.tar --name my-k8s\n</code></pre> <ol> <li> <p>Write the YAML manifest:    See <code>django-deployment.yaml</code>.</p> </li> <li> <p>Deploy to the target namespace:</p> </li> </ol> <pre><code>kubectl apply -f django-deployment.yaml -n storage\n</code></pre> <p></p> <ol> <li>Check the deployment status:</li> </ol> <pre><code>kubectl get pods,svc -n storage -o wide\n</code></pre> <ol> <li>Visit the page:</li> </ol> <pre><code>http://172.18.0.3:30000/\n</code></pre> <p></p>"},{"location":"zh/","title":"\u6b22\u8fce","text":"<p>\u8fd9\u662f\u4e2d\u6587\u9996\u9875\u3002</p>"},{"location":"zh/getting-started/","title":"\u5feb\u901f\u5f00\u59cb","text":"<p>\u5b89\u88c5\u4f9d\u8d56\u5e76\u5728\u672c\u5730\u8fd0\u884c\u3002</p>"},{"location":"zh/learn-k8s-django/","title":"\u6848\u4f8b\u5b66\u4e601\uff1ak8s\u96c6\u7fa4\u90e8\u7f72django\u7f51\u9875","text":"<p>\u524d\u63d0\uff1a 1.\u5728ubuntu20.04\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u5b8c\u6210\u4e86k8s\u7684kind\u96c6\u7fa4\u90e8\u7f72\u3002 2.kind \u96c6\u7fa4\u540d\u79f0 <code>my-k8s</code></p> <p>\u6ce8\u610f\uff1a\u6d89\u53ca\u5230\u7684\u6587\u4ef6\u5df2\u5b58\u50a8\u5728learn-k8s-django\u76ee\u5f55\u4e0b\u3002</p>"},{"location":"zh/learn-k8s-django/#k8smysql","title":"\u5728k8s\u4e2d\u6784\u5efamysql\u6570\u636e\u5e93","text":"<p>1.\u9996\u5148\uff0c\u5bfc\u5165mysql\u6570\u636e\u5e93\u7684\u955c\u50cf\u3002</p> <p>2.\u7f16\u5199yaml\u6587\u4ef6\uff1a \u5177\u4f53\u89c1sql-k8s.yaml</p> <p>3.\u90e8\u7f72\u5230 Kubernetes kubectl apply -f sql-k8s.yaml</p>"},{"location":"zh/learn-k8s-django/#django","title":"\u6784\u5efadjango\u7f51\u9875\u955c\u50cf","text":"<p>1.\u65b0\u5efadjango\u5de5\u7a0b</p> <p>2.\u4fee\u6539\u5de5\u7a0b\u91cc\u7684\u8bbe\u7f6e\uff1asettings.py \u5c06\u4f7f\u7528\u7684\u6570\u636e\u5e93\u4fee\u6539\u4e3amysql\u6570\u636e\u5e93\u3002</p> <pre><code>DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        \"NAME\": \"mytest\",\n        \"USER\": \"root\",\n        \"PASSWORD\": os.environ.get(\"MYSQL_ROOT_PASSWORD\"),  # \u4ece\u73af\u5883\u53d8\u91cf\u83b7\u53d6\u5bc6\u7801\n        \"HOST\": \"mysql.storage.svc.cluster.local\",  # MySQL \u670d\u52a1\u7684 DNS \u5730\u5740\n        \"PORT\": \"3306\",  # MySQL \u9ed8\u8ba4\u7aef\u53e3\n        \"OPTIONS\": {\n            \"charset\": \"utf8mb4\", # \u4f7f\u7528 utf8mb4 \u7f16\u7801\u652f\u6301\u8868\u60c5\u7b49\n            \"init_command\": \"SET sql_mode='STRICT_TRANS_TABLES'\"\n        },\n    }\n}\n</code></pre> <p>4.\u4fdd\u5b58\uff0c\u5e76\u5728\u6b64\u5de5\u7a0b\u4e0b\u521b\u5efarequirements.txt\u548cDockerfile</p> <p>requirements.txt:</p> <pre><code>Django==5.0\nmysqlclient==2.2.4\ngunicorn==23.0.0\n</code></pre> <p>Dockerfile:</p> <pre><code># \u4f7f\u7528\u5b98\u65b9 Python \u955c\u50cf\u4f5c\u4e3a\u57fa\u7840\u955c\u50cf\nFROM python:3.10-slim\n\n# \u8bbe\u7f6e\u5de5\u4f5c\u76ee\u5f55\nWORKDIR /app\n\n# \u5b89\u88c5\u6784\u5efa mysqlclient \u6240\u9700\u7684\u4f9d\u8d56\nRUN apt-get update &amp;&amp; \\\n    apt-get install -y --no-install-recommends \\\n    build-essential \\\n    gcc \\\n    pkg-config \\\n    libmariadb-dev \\\n    libmariadb-dev-compat &amp;&amp; \\\n    rm -rf /var/lib/apt/lists/*  # \u6e05\u7406 apt \u7f13\u5b58\u4ee5\u51cf\u5c0f\u955c\u50cf\u4f53\u79ef\n\n# \u590d\u5236\u5f53\u524d\u76ee\u5f55\u5185\u5bb9\u5230\u5bb9\u5668\nCOPY . /app/\n\n# \u5b89\u88c5\u9879\u76ee\u4f9d\u8d56\nRUN pip install --no-cache-dir -r requirements.txt\n\n# \u8fd0\u884c\u6570\u636e\u5e93\u8fc1\u79fb\u5e76\u542f\u52a8 Django \u670d\u52a1\nCMD [\"sh\", \"-c\", \"python manage.py migrate &amp;&amp; gunicorn mysite.wsgi:application -b 0.0.0.0:8000\"]\n</code></pre> <p>5.\u6784\u5efa\u955c\u50cf sudo docker build -t my-2025-k8s-single-django-app .</p> <p>6.\u4fdd\u5b58\u955c\u50cf sudo docker save -o my-2025-k8s-single-django-app.tar my-2025-k8s-single-django-app:latest sudo chmod 777 my-2025-k8s-single-django-app.tar</p>"},{"location":"zh/learn-k8s-django/#learn-k8s-django","title":"\u5907\u6ce8\uff1a\u6b64\u6b65\u9aa4\u5236\u4f5c\u7684\u955c\u50cf\u5728learn-k8s-django\u76ee\u5f55\u4e0b\u53ef\u4ee5\u627e\u5230\u3002","text":""},{"location":"zh/learn-k8s-django/#k8sdjango","title":"\u5728k8s\u96c6\u7fa4\u4e0a\u90e8\u7f72django\u7f51\u9875","text":"<p>1.\u5bfc\u5165django\u955c\u50cf kind load image-archive my-2025-k8s-single-django-app.tar --name my-k8s</p> <p>2.\u7f16\u5199yaml\u6587\u4ef6 \u5177\u4f53\u89c1django-deployment.yaml</p> <p>3.\u90e8\u7f72\u5230\u7279\u5b9a\u547d\u540d\u7a7a\u95f4 kubectl apply -f django-deployment.yaml -n storage </p> <p>4.\u67e5\u770b\u90e8\u7f72\u60c5\u51b5 kubectl get pods,svc -n storage -o wide</p> <p>5.\u8bbf\u95ee\u9875\u9762\uff1ahttp://172.18.0.3:30000/ </p>"}]}